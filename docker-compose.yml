version: '3'

services:

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    labels:
       - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    links:
      - phpfpm
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhosts:/etc/nginx/vhost.d
      - ./public:/usr/share/nginx/html
      - ./nginx/logs/nginx-error.log:/var/log/nginx/error.log
      - ./nginx/logs/nginx-access.log:/var/log/nginx/access.log

  dockergen:
    image: jwilder/docker-gen
    container_name: nginx-docker-gen
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    labels:
       - com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhosts:/etc/nginx/vhost.d
      - ./public:/usr/share/nginx/html
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl'

  nginx-proxy:
    image: jwilder/nginx-proxy
    labels:
       - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhosts:/etc/nginx/vhost.d
      - ./public:/usr/share/nginx/html
      - '/var/run/docker.sock:/tmp/docker.sock:ro'

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      NGINX_DOCKER_GEN_CONTAINER: nginx-docker-gen
      NGINX_PROXY_CONTAINER: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhosts:/etc/nginx/vhost.d
      - ./public:/usr/share/nginx/html
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  phpfpm:
      image: php:7.2-fpm
      restart: always
      ports:
          - "9000:9000"
      volumes:
          - ./public:/usr/share/nginx/html

  mysql:
    image: mariadb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_DATABASE=default
      - MYSQL_USER=root
      - MYSQL_PASSWORD=changeme
    ports:
      - "3306:3306" 
    volumes:
      - ./databases/mysql/:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    links:
      - mysql
    ports:
      - 8183:8183
    environment:
      PMA_USER: root
      PMA_PASSWORD: admin
      PMA_ARBITRARY: 1

  dockerswarmgui:
    image: julienbreux/docker-swarm-gui:latest
    ports:
      - "8282:8080"
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'




 # GITLAB CONFIGURATION


  postgresql:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gitlab
      POSTGRES_DB: gitlabhq_production
      DB_EXTENSION: pg_trgm
    volumes:
      - ./databases/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"

  gitlab:
    image: gitlab/gitlab-ce
    depends_on:
      - "postgresql"
      - "redis"
    hostname: 127.0.0.1
    links:
      - postgresql
      - redis
    environment:
      VIRTUAL_HOST: gitlab
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: gitlab
      LETSENCRYPT_EMAIL: ryan@sudio.co
      GITLAB_OMNIBUS_CONFIG: |
        postgresql['enable'] = false
        nginx['proxy_set_headers'] = {
          "X-Forwarded-Proto" => "https",
          "X-Forwarded-Ssl" => "on"
        }
        web_server['external_users'] = ['www-data']
        # postgresql['post'] = '5432'
        # unicorn['port'] = '8082'
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        gitlab_rails['db_username'] = "postgres"
        gitlab_rails['db_password'] = "gitlab"
        gitlab_rails['db_host'] = "postgresql"
        gitlab_rails['db_port'] = "5432"
        gitlab_rails['db_database'] = "gitlabhq_production"
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'unicode'
        redis['enable'] = false
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_port'] = '6379'
        external_url 'http://gitlab'
        gitlab_rails['gitlab_shell_ssh_port'] = 2222
        gitlab_rails['gitlab_ssh_port'] = 2222
    ports:
      - "2222:22"
    volumes:
      - ./srv/gitlab/config:/etc/gitlab:rw
      - ./srv/gitlab/logs:/var/log/gitlab:rw
      - ./srv/gitlab/data:/var/opt/gitlab:rw
























networks:
  default:
    external:
      name: nginx-proxy




#  gitea:
#    image: gitea/gitea:1.3.2
#    volumes:
#      - ./data:/data
#    ports:
#      - "3000:3000"
#      - "22:22"
#    depends_on:
#      - mysql
#    restart: always





